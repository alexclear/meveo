<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:ui="http://java.sun.com/jsf/facelets" xmlns:h="http://java.sun.com/jsf/html" xmlns:f="http://java.sun.com/jsf/core"
    xmlns:cc="http://java.sun.com/jsf/composite" xmlns:p="http://primefaces.org/ui" xmlns:o="http://omnifaces.org/ui" xmlns:c="http://java.sun.com/jsp/jstl/core"
    xmlns:hftl="http://hftl.org" xmlns:hf="http://java.sun.com/jsf/composite/tags">


<!-- 
    A tag to manage custom field values of an entity
    Makes part of custom field management tag group 

    Attributes
        edit - should values be displayed, or data entry be provided instead
        datePattern - date pattern for date entry/display
        messagesId - An id of a message component for error display

 -->

<cc:interface componentType="formField">
    <cc:attribute name="backingBean" required="true" />
    <cc:attribute name="edit" default="#{cc.attrs.backingBean.edit}" />
    <cc:attribute name="datePattern" value="#{paramBean.getProperty('meveo.dateFormat','dd/MM/yyyy')}" />
    <cc:attribute name="messagesId" value=":formPanel:formId:messages" />
</cc:interface>

<cc:implementation>

    <o:importConstants type="org.meveo.model.crm.CustomFieldTypeEnum" />
    <o:importConstants type="org.meveo.model.crm.CustomFieldStorageTypeEnum" />
    <o:importFunctions type="org.meveo.model.crm.CustomFieldValue" var="cfv" />
    <!--     <c:if test="${empty(datePattern)}"> -->
    <!--         <c:set var="datePattern" value="#{paramBean.getProperty('meveo.dateFormat','dd/MM/yyyy')}" /> -->
    <!--     </c:if> -->
    <ui:fragment>

        <span id="#{cc.clientId}" style="white-space: nowrap"> <c:forEach items="${cc.attrs.backingBean.customFieldTemplates}" var="cft">

                <hf:namingContainer>
                    <h:panelGroup rendered="#{!cft.versionable and (not cft.disabled or (cft.disabled and not cft.instance.isValueEmptyForGui()))}">
                        <h:panelGroup rendered="#{cft.storageType eq CustomFieldStorageTypeEnum.SINGLE }">
                            <hftl:decorateFormField label="#{cft.description}#{cft.valueRequired?' *':''}" componentWidth="50" displayOneLine="false">
                                <hftl:customFieldValueField edit="#{cc.attrs.edit}" cft="#{cft}" field="#{cft.instance.cfValue}" backingBean="#{cc.attrs.backingBean}" />
                            </hftl:decorateFormField>
                        </h:panelGroup>

                        <h:panelGroup rendered="#{(cft.storageType eq CustomFieldStorageTypeEnum.MAP or cft.storageType eq CustomFieldStorageTypeEnum.LIST) }">
                            <hftl:customFieldListTable edit="#{cc.attrs.edit}" cft="#{cft}" backingBean="#{cc.attrs.backingBean}" field="#{cft.instance.cfValue}"
                                messagesId="#{cc.attrs.messagesId}" />
                        </h:panelGroup>

                        <c:set var="inheritedValue" value="#{cc.attrs.backingBean.entity.getInheritedOnlyCFValue(cft.code)}" />

                        <hftl:decorateFormField fieldId="cfField_stringI" label="#{messages['customField.inheritedValue']}" componentWidth="50"
                            displayOneLine="false" rendered="#{inheritedValue !=null}">
                            <h:outputText id="cfField_stringI" value="#{cfv:getShortRepresentationOfValueObj(inheritedValue, cc.attrs.datePattern)}" styleClass="field-value" />
                        </hftl:decorateFormField>
                    </h:panelGroup>


                    <h:panelGroup rendered="#{cft.instance.versionable and (not cft.disabled or (cft.disabled and not cft.instance.isValueEmptyForGui()))}">
                        <hftl:decorateFormField label="#{cft.description}#{cft.valueRequired?' *':''}" componentWidth="100" displayOneLine="false">
                            <p:dataTable id="periodTable_omitFromSubmit" lazy="false" value="#{cft.instance.valuePeriods}" var="period"
                                sortField="#{cft.instance.calendar!=null?period.periodStartDate:period.priority}"
                                editable="#{cc.attrs.edit and cft.storageType==CustomFieldStorageTypeEnum.SINGLE}" editMode="cell" resizableColumns="true" reflow="true">

                                <p:ajax event="cellEdit" update="#{cc.attrs.messagesId}" partialSubmit="true" partialSubmitFilter=":not([name*='addNewFields'])" />

                                <p:column headerText="#{messages['customFieldTemplate.priority']}" width="10%" sortBy="#{period.priority}" rendered="#{cft.instance.calendar==null}">
                                    <h:outputText value="#{period.priority}"></h:outputText>
                                </p:column>
                                <p:column headerText="#{messages['customFieldTemplate.periodStartDate']}" width="13%" sortBy="#{period.periodStartDate}">
                                    <h:outputText value="#{period.periodStartDate}">
                                        <f:convertDateTime type="date" pattern="#{paramBean.getProperty('meveo.dateTimeFormat','dd/MM/yyyy')}" />
                                    </h:outputText>
                                </p:column>
                                <p:column headerText="#{messages['customFieldTemplate.periodEndDate']}" width="13%" sortBy="#{period.periodEndDate}">
                                    <h:outputText value="#{period.periodEndDate}">
                                        <f:convertDateTime type="date" pattern="#{paramBean.getProperty('meveo.dateTimeFormat','dd/MM/yyyy')}" />
                                    </h:outputText>
                                </p:column>
                                <p:column headerText="#{messages['customFieldTemplate.periodValue']}">
                                    <p:cellEditor rendered="#{cft.storageType == CustomFieldStorageTypeEnum.SINGLE}">
                                        <f:facet name="output">
                                            <hftl:customFieldValueField edit="false" cft="#{cft}" field="#{period.cfValue}" backingBean="#{cc.attrs.backingBean}" />
                                        </f:facet>
                                        <f:facet name="input">
                                            <hftl:customFieldValueField edit="true" cft="#{cft}" field="#{period.cfValue}" backingBean="#{cc.attrs.backingBean}" />
                                        </f:facet>
                                    </p:cellEditor>
                                    <h:outputText value="#{period.cfValue.getShortRepresentationOfValue(cft, cc.attrs.datePattern)}"
                                        rendered="#{cft.storageType != CustomFieldStorageTypeEnum.SINGLE}" />
                                </p:column>
                                <p:column headerText="#{messages['commons.actions']}" width="15%">
                                    <!-- update="periodFields"  -->
                                    <p:commandButton icon="ui-icon-search" immediate="true" update=":#{cc.clientId}:periodFields" onsuccess="PF('periodValuesDialogWidget').show()"
                                        rendered="#{cft.storageType != CustomFieldStorageTypeEnum.SINGLE}">
                                        <f:setPropertyActionListener target="#{cc.attrs.backingBean.customFieldSelectedTemplate}" value="#{cft}" />
                                        <f:setPropertyActionListener target="#{cc.attrs.backingBean.customFieldSelectedPeriod}" value="#{period}" />
                                        <f:setPropertyActionListener target="#{cc.attrs.backingBean.customFieldSelectedPeriodId}" value=":#{component.parent.parent.clientId}" />
                                        <p:resetInput target=":#{cc.clientId}:periodFields" />
                                    </p:commandButton>
                                    <!-- <p:commandButton id="deletelink" action="#{cft.instance.removeValuePeriod(period)}" partialSubmit="true" process="@this" icon="ui-icon-trash"
                                        update="periodTable_omitFromSubmit" rendered="#{cc.attrs.edit}" /> -->
                                </p:column>
                                <f:facet name="footer">
                                    <p:messages globalOnly="false" redisplay="false" />

                                    <hf:namingContainer id="addNewFields" rendered="#{cc.attrs.edit}">

                                        <p:calendar id="period_date" showButtonPanel="true" pattern="#{paramBean.getProperty('meveo.dateTimeFormat','dd/MM/yyyy')}"
                                            value="#{cc.attrs.backingBean.customFieldNewValue[cft.code.concat('_periodStartDate')]}" required="true"
                                            label="#{messages['customFieldTemplate.periodDate']}" placeholder="#{messages['customFieldTemplate.periodDate']}"
                                            rendered="#{cft.instance.calendar!=null}">
                                        </p:calendar>
                                        <p:calendar id="period_start_date" showButtonPanel="true" pattern="#{paramBean.getProperty('meveo.dateTimeFormat','dd/MM/yyyy')}"
                                            value="#{cc.attrs.backingBean.customFieldNewValue[cft.code.concat('_periodStartDate')]}"
                                            label="#{messages['customFieldTemplate.periodStartDate']}" placeholder="#{messages['customFieldTemplate.periodStartDate']}"
                                            rendered="#{cft.instance.calendar==null}">
                                        </p:calendar>

                                        <p:calendar id="period_end_date" showButtonPanel="true" pattern="#{paramBean.getProperty('meveo.dateTimeFormat','dd/MM/yyyy')}"
                                            value="#{cc.attrs.backingBean.customFieldNewValue[cft.code.concat('_periodEndDate')]}"
                                            label="#{messages['customFieldTemplate.periodEndDate']}" placeholder="#{messages['customFieldTemplate.periodEndDate']}"
                                            rendered="#{cft.instance.calendar==null}">
                                        </p:calendar>

                                        <p:inputText id="newKey" value="#{cc.attrs.backingBean.customFieldNewValue[cft.code.concat('_key')]}" required="true"
                                            placeholder="#{messages['commons.key']}" label="#{messages['commons.key']}" size="15" maxlength="50"
                                            rendered="#{cft.storageType eq CustomFieldStorageTypeEnum.MAP}" />

                                        <hftl:customFieldValueMuteField edit="true" cft="#{cft}" field="#{cc.attrs.backingBean.customFieldNewValue[cft.code.concat('_value')]}"
                                            required="true" label="#{messages['commons.value']}" placeholder="#{messages['commons.value']}" backingBean="#{cc.attrs.backingBean}" />
                                    </hf:namingContainer>

                                    <p:commandButton value="#{messages['commons.addNew']}" partialSubmit="true" process="@this addNewFields" update="periodTable_omitFromSubmit"
                                        action="#{cc.attrs.backingBean.addNewCustomFieldPeriod(cft)}">
                                        <p:resetInput target="addNewFields" />
                                    </p:commandButton>


                                </f:facet>
                            </p:dataTable>
                        </hftl:decorateFormField>
                    </h:panelGroup>

                </hf:namingContainer>
            </c:forEach>
        </span>


        <p:dialog id="dlg_periodValues" widgetVar="periodValuesDialogWidget" header="#{messages['customFieldTemplate.periodValues']}" closeOnEscape="true" modal="true"
            appendTo="@(body)" rendered="#{cc.attrs.edit}" width="700">

            <p:panel>
                <h:panelGroup id="periodFields" layout="block" styleClass="form-panel">
                    <hf:formDecorateField fieldId="period_start_date" label="#{messages['customFieldTemplate.periodDate']}">
                        <h:outputText id="period_start_date" value="#{cc.attrs.backingBean.customFieldSelectedPeriod.periodStartDate}">
                            <f:convertDateTime type="date" pattern="#{cc.attrs.datePattern}" />
                        </h:outputText>
                    </hf:formDecorateField>
                    <hf:formDecorateField fieldId="period_end_date" label="#{messages['customFieldTemplate.periodEndDate']}">
                        <h:outputText id="period_end_date" value="#{cc.attrs.backingBean.customFieldSelectedPeriod.periodEndDate}">
                            <f:convertDateTime type="date" pattern="#{cc.attrs.datePattern}" />
                        </h:outputText>
                    </hf:formDecorateField>
                    <p:remoteCommand name="updateMasterTable" update="#{cc.attrs.backingBean.customFieldSelectedPeriodId}" process="@this" partialSubmit="true"
                        partialSubmitFilter=":not([name*='addNewFields'])" />
                    <hftl:customFieldListTable edit="#{cc.attrs.edit}" cft="#{cc.attrs.backingBean.customFieldSelectedTemplate}" backingBean="#{cc.attrs.backingBean}"
                        field="#{cc.attrs.backingBean.customFieldSelectedPeriod.cfValue}" updateOnAddEdit="#{cc.attrs.backingBean.customFieldSelectedPeriodId}"
                        messagesId="#{cc.attrs.messagesId}" popupWidgetVar="periodValuesDialogWidget"/>

                </h:panelGroup>
            </p:panel>
        </p:dialog>
    </ui:fragment>

</cc:implementation>
</html>